name: Weekly Ethereum Newsletter

on:
  schedule:
  # Triggers at 15:00 UTC every Friday (8:00 AM PDT)
    - cron: '0 15 * * 5'
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build_context:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install Python and requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Build Prompt Context (last 7 days)
        run: python scripts/build_prompt_context.py
        
      - name: Print context
        run: cat scripts/prompt_context.md

      - name: Upload context file for other jobs
        uses: actions/upload-artifact@v4
        with:
          name: context-data
          path: scripts/prompt_context.md

  generate_part_1:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    needs: build_context
    uses: ./.github/workflows/run-single-section.yml
    with:
      part_number: 1
    secrets: inherit # This correctly passes your LLM_API_KEY

  generate_part_2:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    needs: generate_part_1 
    uses: ./.github/workflows/run-single-section.yml
    with:
      part_number: 2
    secrets: inherit

  generate_part_3:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    needs: generate_part_2
    uses: ./.github/workflows/run-single-section.yml
    with:
      part_number: 3
      context_needed: true
    secrets: inherit

  combine_and_send:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    needs: generate_part_3
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Download all partial newsletter files
        uses: actions/download-artifact@v4
        with:
          path: final_parts # Download all artifacts to this directory

      - name: Combine and Stage Newsletter
        id: combine
        run: |
          # Ensure the target directory from your screenshot exists
          mkdir -p content/blog

          # Use the YYYYMMDD format for the filename, as requested
          TIMESTAMP_FILE=$(date -u +"%Y%m%d")
          TIMESTAMP_PRETTY=$(date -u +"%B %d, %Y")
          SUBJECT="Week in Ethereum News - $TIMESTAMP_PRETTY"

          # Define the final path to match your site's structure
          FINAL_PATH="content/blog/${TIMESTAMP_FILE}.md"

          # Combine the files into a temporary location first
          TEMP_FILE="${{ github.workspace }}/final_newsletter.md"
          echo "## Week in Ethereum News" > "$TEMP_FILE"
          echo "### $TIMESTAMP_PRETTY" >> "$TEMP_FILE"
          echo "" >> "$TEMP_FILE"
          
          for part_file in $(find final_parts/ -name "part_*_output.md" | sort); do
            cat "$part_file" >> "$TEMP_FILE"
            echo -e "\n\n" >> "$TEMP_FILE"
          done
          
          # Move the final combined file to its permanent home
          mv "$TEMP_FILE" "$FINAL_PATH"

          echo "--- Final Newsletter created at $FINAL_PATH ---"
          cat "$FINAL_PATH"
          
          # Set outputs for the next steps
          echo "subject=$SUBJECT" >> "$GITHUB_OUTPUT"
          echo "final_path=$FINAL_PATH" >> "$GITHUB_OUTPUT"
          
      - name: Send to Buttondown as a Draft ðŸ“¬
        env:
          BUTTONDOWN_API_KEY: ${{ secrets.BUTTONDOWN_API_KEY }}
        run: |
          # Read the final markdown and escape it for the JSON payload
          # The 'jq' tool is pre-installed on GitHub's runners
          BODY_CONTENT=$(jq -Rs . "${{ github.workspace }}/final_newsletter.md")
          
          # API call to create a draft email in Buttondown
          curl --request POST \
            --url https://api.buttondown.email/v1/emails \
            --header "Authorization: Token $BUTTONDOWN_API_KEY" \
            --header 'Content-Type: application/json' \
            --data '{
              "subject": "${{ steps.combine.outputs.subject }}",
              "body": '"$BODY_CONTENT"'
            }'
      - name: Commit and Push Newsletter ðŸš€
        # This step automatically uses the correct FINAL_PATH from the previous step
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "docs: Publish newsletter for ${{ steps.combine.outputs.subject }} [skip ci]"
          file_pattern: "${{ steps.combine.outputs.final_path }}"
          commit_user_name: GitHub Actions Bot
          commit_user_email: actions@github.com
          
      - name: Upload Final Newsletter as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: weekly-newsletter-${{ github.run_id }}
          path: ${{ github.workspace }}/final_newsletter.md
